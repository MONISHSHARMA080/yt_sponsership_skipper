my16dchbsdbebciuhfhqhThhhhhhhhhh ----- 32
time taken in userKey decoding is -> 83  Microseconds
----++-- in the func to see if we should tell user to update the key
Time remaining until key update: 26130.609088 sec


 the user struct is -> {107305043822082831943 monishsharma010@gmail.com Monish false free tier 0 1746110988 22 uQcI5wcfaAMWq+Su8q4DcFMN3KW5JEYi52Fq2Qofu5vGM4oO6p/ome1TrBDCwaTHrBUErNWqsP27gctf8BRn0EWAO5Ba1Rdt8uBkRt6ff/9OXe/xXeKCdzTuM39t45ExphqCyALo114QjPdbGhY8tIRe+EsWDAtBIYBvzMUG/f0JeLP7tOHbxBozRNeTah2AklLOg5ScsQpU13Fn3tsyQAv7fNMwCCMJeMTTg9NFJj9Uan+tiiAgio9HO1MStVkiekBjaGR8SS3MQhaSa6RYqjttrehaHpNdZ0WEfFKhwjGC0VkVkySCdTvISzPm {"account_id":"107305043822082831943","email":"monishsharma010@gmail.com","user_name":"Monish","is_user_paid":false,"user_tier":"free tier","version":0,"check_for_key_update_on":1746110988,"id_primary_key":22}} 

the decoded json string is -> {"account_id":"107305043822082831943","email":"monishsharma010@gmail.com","user_name":"Monish","is_user_paid":false,"user_tier":"free tier","version":0,"check_for_key_update_on":1746110988,"id_primary_key":22}
probally the user is valid
in the payment func and envKeyAsByte is -> [32/32]0xc0000308e0 


time taken in userKey decoding is -> 35  Microseconds
----++-- in the func to see if we should tell user to update the key
Time remaining until key update: 26128.616457 sec
email -> monishsharma010@gmail.com
name -> Monish
IsPaidUser -> false


----------the useKey struct is -> {AccountID:107305043822082831943 Email:monishsharma010@gmail.com UserName:Monish IsUserPaid:false UserTier:free tier Version:0 CheckForKeyUpdateOn:1746110988 IDPrimaryKey:22 encryptedUserKey:uQcI5wcfaAMWq+Su8q4DcFMN3KW5JEYi52Fq2Qofu5vGM4oO6p/ome1TrBDCwaTHrBUErNWqsP27gctf8BRn0EWAO5Ba1Rdt8uBkRt6ff/9OXe/xXeKCdzTuM39t45ExphqCyALo114QjPdbGhY8tIRe+EsWDAtBIYBvzMUG/f0JeLP7tOHbxBozRNeTah2AklLOg5ScsQpU13Fn3tsyQAv7fNMwCCMJeMTTg9NFJj9Uan+tiiAgio9HO1MStVkiekBjaGR8SS3MQhaSa6RYqjttrehaHpNdZ0WEfFKhwjGC0VkVkySCdTvISzPm decryptedUserKey:{"account_id":"107305043822082831943","email":"monishsharma010@gmail.com","user_name":"Monish","is_user_paid":false,"user_tier":"free tier","version":0,"check_for_key_update_on":1746110988,"id_primary_key":22}} ---------

 it should be id primary key -> 22
the razorpay key and secret id is -> rzp_test_5mnGpcRmIFAxLN K08YDq04KKPzhQ563YA10XNe
the price for the recurring is 412000, -- and the price for the one time is 12000 and the  ID primary key is 22->waiting for the func to finish
printing the body of the response-> {"amount":12000,"amount_due":12000,"amount_paid":0,"attempts":0,"created_at":1746084859,"currency":"INR","entity":"order","id":"order_QPaGLhgtk86jxN","notes":{"id_primary_key":22},"offer_id":null,"receipt":null,"status":"created"}
printing the body of the response-> {"amount":412000,"amount_due":412000,"amount_paid":0,"attempts":0,"created_at":1746084859,"currency":"INR","entity":"order","id":"order_QPaGLh8ubsQ4rB","notes":{"id_primary_key":22},"offer_id":null,"receipt":null,"status":"created"}
 the oder id is (one time)-> order_QPaGLhgtk86jxN   -- recurring -> order_QPaGLh8ubsQ4rB


 testing env and the url is -> file:./localTest.db 


the db url is -> file:./localTest.db  and the url is -> file:./localTest.db
going to the DB to get the tokens
the result of adding the token to db is -> worked hopefully
 the oder id is (one time)-> order_QPaGLhgtk86jxN   -- recurring -> order_QPaGLh8ubsQ4rB
the response form the server is, recurring id  -> order_QPaGLh8ubsQ4rB --one time -> order_QPaGLhgtk86jxN
time taken is -> 450111  Microseconds or  +4.501114e-001  sec  and 450  ms
time taken in userKey decoding is -> 20  Microseconds
----++-- in the func to see if we should tell user to update the key
Time remaining until key update: 71998.251510 sec


 the user struct is -> {F5io4WgYoXyD2oYhZYe0RlYhyLpO17RZLpdgF37f F5io4WgYo55416@gmail.com TestUser:F5io4WgYo55416 false free tier 0 1746156885 24 iC9D67pjG+gGqv5jUUgyjji9E3j68b3HnLIcgfmyH5GZacF+qcRLSX9jgd4dEbGFkb9kJ1jbi/yOOdqmldrjjVlijWhXP7YRlpVuu+k+gPUpKsxRdmEtjLu7Hy3XnEvcqTy1dLKexEbOSLPei/eeO9svIAxpWYMfTOTsdF6e/JxODl4L+YEQMF+crPzahTDGebr6ZcAgJFFZqfFjY9AyCeIh1B2jupn4ofGrAJZONu4tkFi0HZSPZS+QEpSu99CTNRs/29At8TgEkkp/wkuhHNHhCJ0W0j/IIwJbWpvs8IgH+dQ4jgtnn6HGqYOZskJUNy/3/s3zcAYZKnkCZkGcbZM8rGHrcmAxLVtQ4FIinqc= {"account_id":"F5io4WgYoXyD2oYhZYe0RlYhyLpO17RZLpdgF37f","email":"F5io4WgYo55416@gmail.com","user_name":"TestUser:F5io4WgYo55416","is_user_paid":false,"user_tier":"free tier","version":0,"check_for_key_update_on":1746156885,"id_primary_key":24}} 

the decoded json string is -> {"account_id":"F5io4WgYoXyD2oYhZYe0RlYhyLpO17RZLpdgF37f","email":"F5io4WgYo55416@gmail.com","user_name":"TestUser:F5io4WgYo55416","is_user_paid":false,"user_tier":"free tier","version":0,"check_for_key_update_on":1746156885,"id_primary_key":24}
probally the user is valid
in the payment func and envKeyAsByte is -> [32/32]0xc0000308e0 


time taken in userKey decoding is -> 33  Microseconds
----++-- in the func to see if we should tell user to update the key
Time remaining until key update: 71996.253567 sec
email -> F5io4WgYo55416@gmail.com
name -> TestUser:F5io4WgYo55416
IsPaidUser -> false


----------the useKey struct is -> {AccountID:F5io4WgYoXyD2oYhZYe0RlYhyLpO17RZLpdgF37f Email:F5io4WgYo55416@gmail.com UserName:TestUser:F5io4WgYo55416 IsUserPaid:false UserTier:free tier Version:0 CheckForKeyUpdateOn:1746156885 IDPrimaryKey:24 encryptedUserKey:iC9D67pjG+gGqv5jUUgyjji9E3j68b3HnLIcgfmyH5GZacF+qcRLSX9jgd4dEbGFkb9kJ1jbi/yOOdqmldrjjVlijWhXP7YRlpVuu+k+gPUpKsxRdmEtjLu7Hy3XnEvcqTy1dLKexEbOSLPei/eeO9svIAxpWYMfTOTsdF6e/JxODl4L+YEQMF+crPzahTDGebr6ZcAgJFFZqfFjY9AyCeIh1B2jupn4ofGrAJZONu4tkFi0HZSPZS+QEpSu99CTNRs/29At8TgEkkp/wkuhHNHhCJ0W0j/IIwJbWpvs8IgH+dQ4jgtnn6HGqYOZskJUNy/3/s3zcAYZKnkCZkGcbZM8rGHrcmAxLVtQ4FIinqc= decryptedUserKey:{"account_id":"F5io4WgYoXyD2oYhZYe0RlYhyLpO17RZLpdgF37f","email":"F5io4WgYo55416@gmail.com","user_name":"TestUser:F5io4WgYo55416","is_user_paid":false,"user_tier":"free tier","version":0,"check_for_key_update_on":1746156885,"id_primary_key":24}} ---------

 it should be id primary key -> 24
the razorpay key and secret id is -> rzp_test_5mnGpcRmIFAxLN K08YDq04KKPzhQ563YA10XNe
the price for the recurring is 412000, -- and the price for the one time is 12000 and the  ID primary key is 24->waiting for the func to finish
printing the body of the response-> {"amount":12000,"amount_due":12000,"amount_paid":0,"attempts":0,"created_at":1746084888,"currency":"INR","entity":"order","id":"order_QPaGrUM9p2bhCg","notes":{"id_primary_key":24},"offer_id":null,"receipt":null,"status":"created"}
printing the body of the response-> {"amount":412000,"amount_due":412000,"amount_paid":0,"attempts":0,"created_at":1746084888,"currency":"INR","entity":"order","id":"order_QPaGrUal6cbWug","notes":{"id_primary_key":24},"offer_id":null,"receipt":null,"status":"created"}
 the oder id is (one time)-> order_QPaGrUM9p2bhCg   -- recurring -> order_QPaGrUal6cbWug


 testing env and the url is -> file:./localTest.db 


the db url is -> file:./localTest.db  and the url is -> file:./localTest.db
going to the DB to get the tokens
the result of adding the token to db is -> worked hopefully
 the oder id is (one time)-> order_QPaGrUM9p2bhCg   -- recurring -> order_QPaGrUal6cbWug
the response form the server is, recurring id  -> order_QPaGrUal6cbWug --one time -> order_QPaGrUM9p2bhCg
time taken is -> 75232  Microseconds or  +7.523233e-002  sec  and 75  ms
in the webHookEvent
price paid by the user acc to web hook is -> 412000  and the recurring payment price is: 412000  and the one time payement price is: 12000



--------webHook is from the razorpay indeed and now we are going to make the call to DB to set a message there for the user, the ammount paid by the user is -> 412000  and the Currency is  INR and the payment for one time only  false 



the IDPrimary key is -> 24
the time selected form env is -> 20h
>>>>>>the time selected for the key is after  72000000 ms  or  +2.000000e+001  hours or  +1.200000e+003  min
the user account is by razorpay is -> 24


 testing env and the url is -> file:./localTest.db 


the db url is -> file:./localTest.db  and the url is -> file:./localTest.db
the user account ID is -> 24


 testing env and the url is -> file:./localTest.db 


the db url is -> file:./localTest.db  and the url is -> file:./localTest.db
time taken in userKey decoding is -> 25  Microseconds
----++-- in the func to see if we should tell user to update the key
Time remaining until key update: 71960.882846 sec
user selected recurring payment
Order ID from DB: order_QPaGrUal6cbWug
Order ID from request: order_QPaGrUal6cbWug

 the signature generated form the   -- and the one form the Db/stored one is 63305ac93dac9b4889d219f60a59642047a1120b7695d28eb706777e8d8961b0  
the time selected form env is -> 100s
>>>>>>the time selected for the key is after  100000 ms  or  +2.777778e-002  hours or  +1.666667e+000  min
creating the GCM mode
about to write to the result channel in the encryptedUserKey -> +NEW6Xppf2HO8fxUfyJgYODOnKzhKOno7sYGSgImRi2XXfNg6vdxz2jXWZrLvy6Yc+BwcVpA15sT9qsSh+YkvQONXRtKpmS2xwhJABWef29I8K9p8LzRz07ixx9PGPShHjKL3cxyHCNpTHWNQTHZIft2a89OvQsQazMYElkzCfkPCWZrxwYhFbrkWWqalNpNkW5gTseQYxixTlbLoW7b81z2+sNeuPxBMNtmL3Gy6jJMKxEG3KsLhvI6mti6hLyLEhD61de58m28z+3MVuQvZ00mB9YwlenK91nEt4KgnvXIWAO0UKOIRDFeBffDBl5A8GajS4UA0evnUGCjM3271Zp1Y0tE9yQOKFTrdkG6nw==
the new key is -> +NEW6Xppf2HO8fxUfyJgYODOnKzhKOno7sYGSgImRi2XXfNg6vdxz2jXWZrLvy6Yc+BwcVpA15sT9qsSh+YkvQONXRtKpmS2xwhJABWef29I8K9p8LzRz07ixx9PGPShHjKL3cxyHCNpTHWNQTHZIft2a89OvQsQazMYElkzCfkPCWZrxwYhFbrkWWqalNpNkW5gTseQYxixTlbLoW7b81z2+sNeuPxBMNtmL3Gy6jJMKxEG3KsLhvI6mti6hLyLEhD61de58m28z+3MVuQvZ00mB9YwlenK91nEt4KgnvXIWAO0UKOIRDFeBffDBl5A8GajS4UA0evnUGCjM3271Zp1Y0tE9yQOKFTrdkG6nw==
the response form the server is,-> 200 --message to the user -> success  is success -> true
