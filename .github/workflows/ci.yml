name: Docker CI → Test & Auto-Merge

# Run on any push except to main
on:
  push:
    branches-ignore:
      - main

permissions:
  contents: write   # allow pushing to branches
  actions: read

jobs:
  docker-test-and-merge:
    runs-on: ubuntu-latest
    steps:
      # Checkout full history so we can merge
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Create environment files from secrets
      - name: Create root .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env
      
      - name: Create website .env file
        run: echo "${{ secrets.WEBSITE_ENV_FILE }}" > website/.env

      # Build and run tests with Docker Compose
      - name: Run tests using Docker
        run: |
          docker compose up --build --exit-code-from ci
        
      # Copy logs from Docker container before it stops
      - name: Extract logs from container
        if: always()  # Run even if tests fail
        run: |
          # Create directory for logs
          mkdir -p ./logs
          # Copy server.log from the website directory in the container to host
          docker cp $(docker compose ps -q ci):/app/website/server.log ./logs/server.log || echo "Could not copy server.log from container"

          
      - name: Upload CI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: |
            tests/screenshot
          

      # Merge into main if tests passed; abort on conflict
      - name: Merge into main
        if: success()
        run: |
          # configure git identity
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # extract branch name
          BRANCH=${GITHUB_REF#refs/heads/}
          # fetch latest main & attempt merge
          git fetch origin main
          git checkout main
          git merge --no-ff "$BRANCH" || {
            echo "⚠️ Merge conflict detected, aborting."
            git merge --abort
            exit 1
          }
          # push merged main back
          git push origin main
