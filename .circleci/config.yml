version: 2.1

orbs:
  go: circleci/go@1.7.3                # Go orb for go/load-cache, go/mod-download, go/save-cache, go/test :contentReference[oaicite:3]{index=3}
  node: circleci/node@4.7.0            # Node orb for node/install-packages :contentReference[oaicite:4]{index=4}
  browser-tools: circleci/browser-tools@1.5.3  # Chrome & ChromeDriver :contentReference[oaicite:5]{index=5}

jobs:
  test-and-merge:
    # Use Node orb executor so node/install-packages works
    executor:
      name: node/default
      tag: "23.1.0"
    docker:
      - image: cimg/go:1.24
    working_directory: ~/repo
    steps:
      - checkout                             # full git history for merge 

      # --- Go caching & tests ---
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - go/test:
          packages: ./tests

      # --- Start website & tests ---
      - node/install-packages:               # install website deps in website/ with npm cache :contentReference[oaicite:7]{index=7}
          pkg-manager: npm
          working-directory: website
      - run:
          name: Start website
          command: |
            cd website
            npm run dev &
      - run:
          name: Wait for site readiness
          command: npx wait-on http://localhost:5173
      - run:
          name: Install localtunnel
          command: npm install -g localtunnel

      # --- Load ENV_FILE secret into .env ---
      - run:
          name: Create .env from secret
          command: echo "$ENV_FILE" > .env

      # --- Always show logs even on failure ---
      - run:
          name: Print server log
          when: always
          command: |
            echo "=== Server Log ==="
            cat tests/server.log || echo "No server.log found."

      # --- Autoâ€‘merge back to main on success ---
      - run:
          name: Merge into main
          when: on_success
          command: |
            git config user.name "circleci-bot"
            git config user.email "bot@circleci.com"
            git fetch origin main
            git checkout main
            git merge --no-ff "${CIRCLE_BRANCH}" || (git merge --abort && exit 1)
            git push origin main

workflows:
  test_and_merge_workflow:
    filters:
      branches:
        ignore: main                      # skip runs on main 
    jobs:
      - test-and-merge

